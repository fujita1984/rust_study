//配列

use std::vec;

pub fn arrays() {
    //固定長配列
    //要素がスタックに格納されるため高速
    //1次元
    let mut matrix_1: [i32; 3] = [1, 2, 3];
    //2次元
    let mut matrix_2: [[i32; 3]; 2] = [[1, 2, 3], [4, 5, 6]];

    //可変長配列
    //変数はスタックに格納される
    //要素はヒープに格納される
    //変数は次の3つを保持する「要素へのポインタ、要素の数、要素のサイズ」
    let mut v: Vec<i32> = vec![0, 1, 2, 3];
    //追加
    v.push(4);

    //スライス
    //スライスは配列の一部または全てへの参照
    //変数はスタックに格納される
    //変数は次の2つを保持する「要素へのポインタ、要素の数」
    let s1: &[i32] = &matrix_1[0..3];
    let s2: &[i32] = &v[1..5];
    println!("{:?}", s1);
    println!("{:?}", s2);
}
